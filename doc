docker ps -a  - показывает запущенные и остановленные контейнеры

docker images показывает список всех образов которые есть на компьютере

docker run <image name> - создает и запускает контейнер с именем если внутри контейнера нет активного процесса,
    то докер автоматически останавливает контейнер.
docker run -i -t <image name> - запускаем интерактивный терминал внутри контейнера busybox 
    мы находимся в терминале host системы, можем дать ls или hostname -получим название хоста это тег образа
    hostname -i получим ip нашего контейнера, ткже можно пингануть какой-нибудь хост и получим ms, 
    показывающий что есть доступ к внешней сети.
    ls - la получим структуру папок и файлов в нашем контейнере  

удаляем все остановленные контейнеры docker container prune     
sudo docker rm <tag, names>

выйти из контейнера можно exit или завершить процесс в терминале
docker container prune удалит все остановленные контейнеры 

Запуск в фоновом режиме
docker run -d nginx
docker container inspect <id container> | grep IPAddress

Остановка контейнера
остановить контейнер docker stop <id(name) container>
если процесс не завершается то можно остановить docker kill 



Запуск дополнительных процессов в работающем контейнере
docker exec -it <id(name)> bash

Присвоить имя для контейнера
docker run -d --name <my_nginx> nginx

Явная публикация порта 
docker run -p 8080:80 nginx - (8080 внешний порт, 80 внутренний порт)

Маппинг томов
docker run -v ${PWd}:/usr/share/nginx/html nginx

 
docker run -v /home/aser/docker_upload/build:/usr/share/nginx/html -p 8080:80 -d nginx

автоматическое удаление контейнера, после его остановки (--rm)
sudo docker run -it --rm busybox

разбиение команд на строки используется \ 

docker run \
 -v /home/aser/docker_upload/build:/usr/share/nginx/html \
  -p 8080:80 \
   -d \
    nginx